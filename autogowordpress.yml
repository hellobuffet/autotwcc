# according to staging or production, login vm to do this playbook
---
- name: make test server
  hosts:  localhost
  remote_user: root
  vars_files:
    - vars/default.yml
#==================VM系統設定區=================================
  tasks:
#登記twccapikey====================
    - name: update twccli api key
      ansible.builtin.expect:
        command: twccli config init
        responses:
          "Please enter TWCC project code:" : "{{ twcc_project_id }}"
          "Please enter TWCC APIKEY:" : "{{ twcc_api_key }}"
        # no_log: true  
        #          "Do you agree we use the collection of the information by GA to improve user experience?  [Y/n]:" : "Y"
#更新TWCCLI到最新版=================
    - name: update TWCCLI
      pip:
         name: TWCC-CLI
         state: latest

#建立及下載主機所要使用的金鑰========================
    - name: download twcc key
      command: twccli mk key -n {{ twcc_key }}
#修改金鑰權限========================
#    - name: change the key permissions
#      file:
#          path: "~\twcc_data\{{ twcc_key_path }}"
#          owner : ubuntu
#          group : ubuntu
#          mode: "400"
#建立web server vm==================
    - name: Old Credential found! Current credential is version
      ansible.builtin.expect:
        command: twccli ls vcs
        responses:
          "Old Credential found! Current credential is version: v0.5.12.4." : ""
          "Do you want to renew your credentials format? [Y/n]: " : "Y"

    - name: create vm
      local_action: command twccli mk vcs -n {{ twcc_webserver_name }} -ptype v.super -itype ubuntu -img "Ubuntu 20.04" -key {{ twcc_key }} -wait -json
      register: vm_json
    - name: save vm_info to vabiable
      set_fact:
        vm_info: "{{ vm_json.stdout | from_json }}"
    - name: get vm private ip
      local_action: command twccli ls vcs -s {{vm_info.id}} -json
      register: vm_json_have_private_ip
    - name: save vm_json_have_private_ip to vabiable
      set_fact:
        vm_info_have_private_ip: "{{ vm_json_have_private_ip.stdout | from_json }}"
    - name: Print returned json dictionary
      debug:
        var: vm_info_have_private_ip
    - name: Add a host alias that we reach through a tunnel (Ansible 2.0 and newer)
      add_host:
        hostname: '{{ vm_info_have_private_ip[0].private_ip }}'
        groups: bfblogweb
    - name: Sleep for 10 seconds and continue with play
      wait_for:
        timeout: 10
      delegate_to: localhost


#======================================

#建立db server vm=========================
    - name: create db server
      local_action: command twccli mk vcs -n {{ twcc_dbserver_name }} -ptype v.super -itype ubuntu -img "Ubuntu 20.04" -key {{twcc_key}} -wait -json
      register: db_json
    - name: save db_info to vabiable
      set_fact:
        db_info: "{{ db_json.stdout | from_json }}"
    - name: get vm private ip
      local_action: command twccli ls vcs -s {{db_info.id}} -json
      register: db_json_have_private_ip
    - name: save db_json_have_private_ip to vabiable
      set_fact:
        db_info_have_private_ip: "{{ db_json_have_private_ip.stdout | from_json }}"
    - name: Print returned json dictionary
      debug:
        var: db_info_have_private_ip
    - name: Add a host alias that we reach through a tunnel (Ansible 2.0 and newer)
      add_host:
        hostname: '{{ db_info_have_private_ip[0].private_ip }}'
        groups: bfblogdb
    - name: Sleep for 10 seconds and continue with play
      wait_for:
        timeout: 10
      delegate_to: localhost
#======================================

    #開PORT
    - name: Read TWCC credential file
      shell: cat {{ twcc_credential }}
      become_user: ubuntu
      register: twcc_credential_file
    - name: Checking API Key is in system
      become_user: ubuntu
      when: twcc_credential_file.stdout.find('twcc_api_key') == -1
      fail: msg="NO TWCC API Key, check document"
      
    - name: Use TWCC-CLI to open webserver http port
      become_user: ubuntu
      shell: twccli net vcs -s {{vm_info.id}} -cidr {{ allow_http_cidr }} -p 80

    - name: Use TWCC-CLI to open dbserver db port
      become_user: ubuntu
      shell: twccli net vcs -s {{db_info.id}} -cidr {{ allow_http_cidr }} -p 3306
# 建立附載平衡並將web server加入
    - name: create Load Balancers
      become_user: ubuntu
      shell: twccli mk vlb -lt NETWORK_LB -lp 80 -lt NETWORK_LB -lp 443 -lm SOURCE_IP -n {{twcc_lb_name}} -json -wait
      register: lb_json
    - name: save lb_json to vabiable
      set_fact:
        lb_info: "{{ lb_json.stdout | from_json }}"
    - name: Print returned json dictionary
      debug:
        var: lb_info
    - name: add host to load balancers
      become_user: ubuntu
      shell: twccli ch vlb -id {{ lb_info.id }} -m {{ vm_info_have_private_ip[0].private_ip }}:80
    - name: Print lb info
      debug:
        var: lb_info

#==================VM程式設定區=================================
- name: In bfblogweb server vm
  hosts: bfblogweb
  become : yes
  vars_files:
    - vars/default.yml
  vars:
    ansible_ssh_private_key_file: ~/.twcc_data/{{twcc_key}}.pem
    # ansible_ssh_private_key_file: "{{ twcc_key_path }}"
    ansible_ssh_user: ubuntu
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
  tasks:
    - name: Install net-tools for XAMPP
      apt:
        name: net-tools
        update_cache: yes
    - name: Get XAMPP
      get_url:
        url: https://www.apachefriends.org/xampp-files/8.0.0/xampp-linux-x64-8.0.0-0-installer.run?from_af=true
        dest: /tmp/xampp-linux.run
        mode: '0555'
    - name: Install XAMPP
      command: /tmp/xampp-linux.run --mode unattended --unattendedmodeui minimal
    - name: Ensure wordpress directory exists
      file:
        path: /opt/wordpress
        state: directory
    - name: Puting Wordpress
      unarchive:
        src: https://tw.wordpress.org/latest-zh_TW.tar.gz
        dest: /opt
        creates: /opt/wordpress/wp-config-sample.php
        remote_src: yes
        owner: daemon
    - name: Create symbolic link
      file:
        src: /opt/wordpress
        dest: /opt/lampp/htdocs/wp
        state: link
    - name: auto start lampp link file
      file:
        src: /opt/lampp/lampp
        dest: /etc/init.d/lampp
        state: link
#    - name: auto start lampp link file
#      command: ln -s /opt/lampp/lampp  /etc/init.d/lampp
    - name: auto start lampp
      command: update-rc.d -f lampp defaults
#==================DB程式設定區=================================
- name: In bfblogdb server vm
  hosts: bfblogdb
  become: yes
  vars_files:
    - vars/default.yml
  vars:
    ansible_ssh_private_key_file: ~/.twcc_data/{{twcc_key}}.pem
    # ansible_ssh_private_key_file: "{{ twcc_key_path }}"
    ansible_ssh_user: ubuntu
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

  tasks:
    - name: Install mariadb-server
      apt:
        name: mariadb-server
        update_cache: yes

    - name: Create DB name wordpress
      shell: echo "CREATE database wordpress" | mysql -u root

    - name: Create user name buffet
      shell: echo "CREATE USER '{{ twcc_db_wordpress_id }}'@'%' IDENTIFIED BY '{{ twcc_db_wordpress_pw }}'" | mysql -u root
    - name: change PRIVILEGES for {{twcc_db_wordpress_id}}
      shell: echo "GRANT ALL PRIVILEGES ON * . * TO '{{ twcc_db_wordpress_id }}'@'%'" | mysql -u root

    - name: ensure mysql listening on all ports
      ansible.builtin.lineinfile:
        path: /etc/mysql/my.cnf
        regexp: '^bind-address'
        line: bind-address            = 0.0.0.0


    - name: Secure MariaDB Installation
      expect:
        command: mysql_secure_installation
        responses:
          'Enter current password for root \(enter for none\): ': ''
          'Set root password\? \[Y\/n\] ': 'Y'
          'New password: ': "{{ twcc_dbroot_pw }}"
          'Re-enter new password: ': "{{ twcc_dbroot_pw }}"
          'Remove anonymous users\? \[Y\/n\] ': 'y'
          'Disallow root login remotely\? \[Y\/n\] ': 'y'
          'Remove test database and access to it\? \[Y\/n\] ': 'y'
          'Reload privilege tables now\? \[Y\/n\] ': 'y'
        echo: yes
    - name: restart db server
      shell: systemctl restart mariadb

#    - name: Create MariaDB User
#      mysql_user: name={{ dbuser }} password={{ dbpasswd }} priv={{ dbname }}.*:ALL host='%' state=present

#=====================訊息整理====================
- name: make test server
  hosts:  localhost
  remote_user: root
  vars_files:
    - vars/default.yml

  tasks:
    - name: print private_ip
      debug:
        msg:
          - "wordpress設定網址：http://{{ lb_info.vip }}/wp  "
          - "資料庫名稱：　　wordpress"
          - "使用者名稱：　　{{ twcc_db_wordpress_id }}"
          - "密碼：　　　　　{{ twcc_db_wordpress_pw }}"
          - "資料庫主機位置：{{ db_info_have_private_ip[0].private_ip }}"
          - "資料表前置詞：　wp_"
          - "完成wordpress設定的登入，或於瀏覽器位置輸入http://{{ lb_info.vip }}/wp/wp-login.php進行登入。"
